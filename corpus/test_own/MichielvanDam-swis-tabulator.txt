Tabulator: Exploring and Analyzing linked data on the Semantic Web
Summary
The semantic web doesn’t spread as quickly as it could, because the immediate value of adding content or links isn’t apparent. Providing visualization for RDF datasets could improve this, but no generic and easily accessible solution for this exists. For specific types of data specialized visualizations exist, but for data outside that specialized scope no default solution is selected. To solve this the authors propose the Tabulator, a generic RDF browser, to provoke interest in the semantic web and to interact more easily with the entire web of RDF data.
To keep the browser easy to use, a full in-browser javascript implementation is made for browsing the RDF datasets. This browser uses two modes: one for exploring (new) data, one for analyzing (searching within) data. To support comprehensively visualizing each resulting dataset, several views are defined that a user can switch between: Outliner, Map, Calendar, Timeline and Table view, each view with distinct properties that make it suitable for other types of data, but with the Outliner view generic enough that it works for every kind of (inter)connected data, representing as a tree.
For determining what to show in the browser (e.g. which links to follow/dereference in depth and which to only show collapsed)  information from the RDF links is used and everything considered related is dereferenced, as far as needed to meet the curiosity of the user. Being able to switch between the views gives the possibility to select more detail only in a specific domain, and to more easily discover data, or to more easily select the right detailed view based on interface suggestions done in the underlying ontology.
Review
There are three goals, stated by the authors, for tabulator: “to demonstrate and utilize the power of linked RDF data (1) with a user-friendly Semantic Web browser (2) that is able to recognize and follow RDF links to other RDF resources based on the user’s exploration and analysis (3)” The first goal seems to succeed, insofar it concerns utilizing the power of linked RDF. The user-friendliness of the Semantic Web Browser however, isn’t discussed. It is only assumed that providing these views lead to user-friendliness. The third goal again seems to be attained by the Tabulator as suggested in the paper.
The paper is not well-written to support the goals. A clear build-up of knowledge when reading the paper seems to lack, and the paper introduces concepts and tests that aren’t explained or used when reading onwards. For example for the Scenarios of section 2.1 that the authors claim were used to guide the development, it’s not clear how they were created, applied or used. The table view is mentioned as one of the few views, but is not explained. It’s also strange that the related work is only explained at the end of the paper, while the authors say that the Tabulator builds on the long tradition of that same previous work. Finally it is concluded that to enable generic browsing, sufficiently powerful UI tips can be left in ontologies, but without examples and mostly without having introduced or discussed the topic before. In short this makes for a confusing paper where the goals aren’t clear throughout the paper and explanations to key aspects are left out.
